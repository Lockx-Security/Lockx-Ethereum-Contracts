name: gas-diff

on:
  pull_request:
    branches: ["main", "master"]

jobs:
  gas-diff:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: base

      - name: Setup Node (base)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: base/package.json

      - name: Install deps (base)
        run: |
          cd base
          npm ci

      - name: Generate base gas report
        run: |
          cd base
          npm run gas:report

      - name: Move base gas report
        run: mv base/reports/gas-report.txt $GITHUB_WORKSPACE/base-gas.txt

      - name: Checkout PR head
        uses: actions/checkout@v4
        with:
          path: head

      - name: Setup Node (head)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: head/package.json

      - name: Install deps (head)
        run: |
          cd head
          npm ci

      - name: Generate head gas report
        run: |
          cd head
          npm run gas:report

      - name: Diff gas reports
        run: |
          node head/scripts/compare-gas.js base-gas.txt head/reports/gas-report.txt > gas-diff.md

      - name: Comment gas diff on PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('gas-diff.md', 'utf8');
            // Delete previous bot comments (optional)
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const botId = context.actor;
            const prev = comments.find(c => c.user.login === botId && c.body.includes('| Function | Base'));
            if (prev) {
              await github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: prev.id,
              });
            }
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body,
            });
